{"version":3,"file":"static/js/637.dcd6b478.chunk.js","mappings":"uQAoEA,UAvDkB,WAChB,IAAAA,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACAC,EAAYH,EAAZG,aACAC,EAAKJ,EAALI,MACaC,EAAML,EAAnBM,UAAaD,OAETE,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CAACC,MAAO,CAAEC,KAAM,OAAQC,GAAI,OAASC,GAAI,EAAGC,GAAI,GAAGC,UACrDC,EAAAA,EAAAA,MAAA,QAAMC,SAAUf,GAPH,SAAAgB,GACfZ,GAASa,EAAAA,EAAAA,IAAWD,IACpBf,GACF,IAI2CY,SAAA,EACrCC,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAACC,UAAWjB,EAAOkB,MAAMP,SAAA,EACnCP,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAACC,QAAQ,QAAOT,SAAC,YAC3BP,EAAAA,EAAAA,KAACiB,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJC,GAAG,QACHC,KAAK,SACD3B,EAAS,QAAS,CAAE4B,SAAU,8BAEpCrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAgB,CAAAf,SACdX,EAAOkB,OAASlB,EAAOkB,MAAMS,cAIlCf,EAAAA,EAAAA,MAACI,EAAAA,GAAW,CAACC,UAAWjB,EAAO4B,SAASjB,SAAA,EACtCP,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CAACC,QAAQ,WAAUT,SAAC,eAC9BP,EAAAA,EAAAA,KAACiB,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJC,GAAG,WACHC,KAAK,YACD3B,EAAS,WAAY,CACvB4B,SAAU,yBACVI,UAAW,CACTC,MAAO,EACPH,QAAS,iDAIfvB,EAAAA,EAAAA,KAACsB,EAAAA,GAAgB,CAAAf,SACdX,EAAO4B,UAAY5B,EAAO4B,SAASD,cAIxCvB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CAACrB,GAAI,EAAGsB,YAAY,OAAOR,KAAK,SAAQb,SAAC,gBAMxD,C","sources":["pages/LoginPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport { loginThunk } from 'redux/authReducer';\nimport {\n  Box,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Button,\n} from '@chakra-ui/react';\n\nconst LoginPage = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    dispatch(loginThunk(data));\n    reset();\n  };\n\n  return (\n    <Box width={{ base: '100%', md: '50%' }} ml={0} mt={10}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl isInvalid={errors.email}>\n          <FormLabel htmlFor=\"email\">Email:</FormLabel>\n          <Input\n            id=\"email\"\n            type=\"email\"\n            {...register('email', { required: 'This field is required' })}\n          />\n          <FormErrorMessage>\n            {errors.email && errors.email.message}\n          </FormErrorMessage>\n        </FormControl>\n\n        <FormControl isInvalid={errors.password}>\n          <FormLabel htmlFor=\"password\">Password:</FormLabel>\n          <Input\n            id=\"password\"\n            type=\"password\"\n            {...register('password', {\n              required: 'This field is required',\n              minLength: {\n                value: 7,\n                message: 'Password must have at least 7 characters',\n              },\n            })}\n          />\n          <FormErrorMessage>\n            {errors.password && errors.password.message}\n          </FormErrorMessage>\n        </FormControl>\n\n        <Button mt={4} colorScheme=\"blue\" type=\"submit\">\n          Sign In\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default LoginPage;\n"],"names":["_useForm","useForm","register","handleSubmit","reset","errors","formState","dispatch","useDispatch","_jsx","Box","width","base","md","ml","mt","children","_jsxs","onSubmit","data","loginThunk","FormControl","isInvalid","email","FormLabel","htmlFor","Input","_objectSpread","id","type","required","FormErrorMessage","message","password","minLength","value","Button","colorScheme"],"sourceRoot":""}